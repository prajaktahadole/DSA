// Prime and its Reverse 

// Description
// Given an integer n, find out whether the number is prime and the reverse of the number is also a prime number.
// If it is, then print "Yes" else "No".

// Input
// The first line of the input contains one integer t (1 ≤ t ≤ 10) — the number of test cases. Then t test cases follow.
// The first line of each test case contains a single integer n (1 ≤ n ≤ 1000000000).

// Output
// For each test case, print the answer.

// Sample Input 1 
// 2
// 151
// 10
// Sample Output 1
// Yes
// No

function  PrimeReverse(n){
  
  if(isPrime(n) === true )
  {
      var res = reverse(n);
      if(isPrime(res) === true)
      {
          return "Yes";
      }
      else
      {
         return "No";
       }
  }
  else{
      return "No";
  }
 
  
 
   
}

function reverse(n){
 var res = 0;
  while(n !== 0)
  {
      var temp = n%10;
      res = res*10 + temp;
      n = Math.floor(n/10);
  }
  return res;
   
}



function isPrime(n){
    if (n <= 1)
      return false;

    for (let i = 2; i < n; i++)
      if (n % i == 0)
          return false;

  return true;
}





function runProgram(input){
   input = input.split("\n").map(Number);
  
   for(var i = 1; i <= +input[0]; i++)
   {
     var n = input[i];  
     console.log(PrimeReverse(n));
   }
}
if (process.env.USER === "") {
 runProgram(``);
} else {
 process.stdin.resume();
 process.stdin.setEncoding("ascii");
 let read = "";
 process.stdin.on("data", function (input) {
   read += input;
 });
 process.stdin.on("end", function () {
   read = read.replace(/\n$/, "");
   read = read.replace(/\n$/, "");
   runProgram(read);
 });
 process.on("SIGINT", function () {
   read = read.replace(/\n$/, "");
   runProgram(read);
   process.exit(0);
 });
}

